function validate_class_name() {
    echo "not yet implemented"
}

function validate_input() {
    for key in `echo "$settings_list"`; do
        key=$(echo $key | cut -d "," -f1)
        if [ "${!key}" == "" ]; then
            echo "$key is not properly set"
            cat "$includes_dir/usage.txt"
            exit 1
        fi
    done
}

function get_plugin_dir() {
    echo "$(pwd)/$plugin_name"
}

function make_plugin_dir() {
    if [ -d "$plugin_dir" ]; then
        echo "directory $plugin_dir already exists";
        exit 1
    fi

    mkdir "$plugin_dir"
}

function do_subs() {
    if [ ! -d "$plugin_dir" ]; then
        echo "$plugin_dir doesn't exist can't rename files"
        return 1
    fi

    cd "$plugin_dir"
    for sub_filename in `find . -name "*.php"`; do

        sed -i ".plugin_name.bkp" s/"{plugin_name}"/"$plugin_name"/g "$sub_filename"
        sed -i ".version.bkp" s/"{version}"/"$version"/g "$sub_filename"
        sed -i ".package_name.bkp" s/"{package_name}"/"$package_name"/g "$sub_filename"
        sed -i ".link.bkp" s/"{link}"/"$link"/g "$sub_filename"
        sed -i ".author.bkp" s/"{author}"/"$author"/g "$sub_filename"
        sed -i ".author_uri.bkp" s/"{author_uri}"/"$author_uri"/g "$sub_filename"
        sed -i ".plugin_uri.bkp" s/"{plugin_uri}"/"$plugin_uri"/g "$sub_filename"
        sed -i ".plugin_uri.bkp" s/"{description}"/"$description"/g "$sub_filename"
    done

    return 0
}

function fix_filenames() {
    if [ ! -d "$plugin_dir" ]; then
        echo "$plugin_dir doesn't exist can't rename files"
        return 1
    fi

    cd "$plugin_dir"
    for plugin_file in `find . -name "*plugin_name*"`; do
        src_filename="$(echo $plugin_file | sed s/"\.\/"//g)"
        target_filename="$(echo $src_filename | sed s/plugin_name/"$plugin_name"/g)"

        mv "$src_filename" "$target_filename"
    done

    cd "$current_dir"
    return 0
}

function remove_backup_files() {
    if [ ! -d "$plugin_dir" ]; then
        echo "$plugin_dir doesn't exist can't rename files"
        return 1
    fi

    cd "$plugin_dir"
    find . -name "*.bkp" -exec rm -f "{}" ";"

    return 0
}

function sed_esc() {
    echo "$1" | sed s/"\/"/"\\\\\/"/g | sed s/"&"/"\\\&"/g
}

function copy_template_files_to_plugin_dir() {
    make_plugin_dir
    cd "$template_dir"
    tar -vcf "$plugin_dir/template_files.tar" *
    cd "$plugin_dir"
    tar -xvf template_files.tar
    rm -f template_files.tar
    cd "$current_dir"
}

function process_interactive_args() {
    echo "not yet implemented"
    exit 0
}

function is_a_known_key() {
    for key in `echo "$settings_list"`; do
        key=$(echo $key | cut -d "," -f1)
        if [ "$key" == "$1" ]; then
            echo "true"
            return 0
        fi
    done

    echo "false"
    return 1
}

function get_validation_function() {
    for setting in `echo "$settings_list"`; do
        key=$(echo $setting | cut -d "," -f1)
        validation_function=$(echo $setting | cut -d "," -f3)
        if [ "$key" == "$1" ]; then
            echo "$validation_function"
            return 0
        fi
    done

    echo ""
    return 1
}

function process_noninteractive_args() {
    for setting in `echo "$1"`; do
        key="$(echo $setting | cut -d "=" -f1)"
        value="$(echo $setting | cut -d "=" -f2)"
        if [ "$(is_a_known_key "$key")" == "true" ]; then
            eval $key="$value"
        fi
    done
}
